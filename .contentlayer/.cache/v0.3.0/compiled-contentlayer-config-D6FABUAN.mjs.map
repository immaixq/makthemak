{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport remarkGfm from 'remark-gfm';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\n\nconst computedFields = {\n    slug: {\n        type: 'string',\n        // text.mdx => text\n        resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\n    }\n}\n\nexport const Blog = defineDocumentType(() => ({\n    name: 'Blog',\n    //location of file wrt contentdirpath\n    filePathPattern: 'blog/*.mdx',\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true\n        },\n        publishedAt: {\n            type: 'string',\n            required: true\n        },\n        summary: {\n            type: 'string',\n            required: true\n        },\n        tags: {\n            type: 'list',\n            of: {type: 'string'}\n        }\n    },\n    computedFields\n}));\n\nexport default makeSource({\n    contentDirPath: 'src/content',\n    documentTypes: [Blog],\n    mdx: {\n      remarkPlugins: [remarkGfm],\n      rehypePlugins: [\n        rehypeSlug,\n        [\n          rehypePrettyCode,\n          {\n            theme: 'one-dark-pro',\n            onVisitLine(node) {\n              // Prevent lines from collapsing in `display: grid` mode, and allow empty\n              // lines to be copy/pasted\n              if (node.children.length === 0) {\n                node.children = [{ type: 'text', value: ' ' }];\n              }\n            },\n            onVisitHighlightedLine(node) {\n              node.properties.className.push('line--highlighted');\n            },\n            onVisitHighlightedWord(node) {\n              node.properties.className = ['word--highlighted'];\n            },\n          },\n        ],\n        [\n          rehypeAutolinkHeadings,\n          {\n            properties: {\n              className: ['anchor'],\n            },\n          },\n        ],\n    \n    ]\n    },\n  });\n\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAEnC,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA;AAAA,IAEN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAClE;AACJ;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA;AAAA,EAEN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAC,MAAM,SAAQ;AAAA,IACvB;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAM;AAGhB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACA;AACF,CAAC;",
  "names": []
}
